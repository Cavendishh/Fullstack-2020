{"version":3,"sources":["components/SearchPerson.js","components/NewPerson.js","components/RenderPerson.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["SearchPerson","props","value","showPerson","onChange","handleFilterChange","NewPerson","onSubmit","addPerson","newName","handleNoteChange","newNumber","handleNumberChange","type","RenderPerson","personsFiltered","map","person","key","name","number","onClick","handleRemovePerson","id","Notification","message","status","className","baseUrl","axios","get","newObject","post","then","response","data","delete","put","App","useState","persons","setPersons","setNewName","setNewNumber","setShowPerson","errorMessage","setErrorMessage","messageStatus","setMessageStatus","filter","toLowerCase","includes","useEffect","personService","event","target","preventDefault","personObject","some","window","confirm","personFound","find","catch","setTimeout","returnedPerson","concat","error","n","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30d8835a.chunk.js","sourcesContent":["import React from 'react'\n\nconst SearchPerson = (props) => {\n  return (\n    <form>\n      Search for person(s):\n    <input\n      value={props.showPerson}\n      onChange={props.handleFilterChange} />\n    </form>\n  )\n}\n\nexport default SearchPerson;\n","import React from 'react'\n\nconst NewPerson = (props) => {\n  return (\n    <form onSubmit={props.addPerson}>\n      Name:\n        <input value={props.newName}\n        onChange={props.handleNoteChange} />\n        <br />\n      Number:\n       <input value={props.newNumber}\n        onChange={props.handleNumberChange} />\n        <br />\n        <button type='submit'>Add</button>\n    </form>\n  )\n}\n\nexport default NewPerson\n","import React from 'react'\n\nconst RenderPerson = (props) => {\n  return (\n    props.personsFiltered.map((person) =>\n      <p key={person.name}>\n        {person.name} {person.number}\n        <button onClick={() => props.handleRemovePerson(person.name, person.id)}>\n          Remove\n        </button>\n      </p>)\n  )\n}\n\nexport default RenderPerson\n","import React from 'react'\n\nconst Notification = ({ message, status }) => {\n  if (message === null) {\n    return null\n  } else {\n    return (\n      <div className={status}>\n        {message}\n      </div>\n    )\n  }\n}\n\nexport default Notification\n","import axios from 'axios'\n//This URL is for part 2 exercises\n//const baseUrl = 'http://localhost:3001/persons'\n\n//This URL is for part 3 exercises\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, update }","import React, { useState, useEffect } from 'react'\nimport SearchPerson from './components/SearchPerson'\nimport NewPerson from './components/NewPerson'\nimport RenderPerson from './components/RenderPerson'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [showPerson, setShowPerson] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [messageStatus, setMessageStatus] = useState(null)\n\n  const handleNoteChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleFilterChange = (event) => setShowPerson(event.target.value)\n  const personsFiltered = persons.filter((person) => person.name.toLowerCase().includes(showPerson.toLowerCase()))\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n  const handleRemovePerson = (name, id) => {\n    if (window.confirm('Do you really want to delete this person?')) {\n      personService\n      .remove(id)\n      .then(() => {\n        setPersons(persons.filter(n => n.id !== id));\n      })\n      .catch(() => {\n        setErrorMessage(`Information of ${newName} has already been removed from server`)\n        setMessageStatus('error')\n        setTimeout(() => {\n          setErrorMessage(null)\n          setMessageStatus(null)\n        }, 3000)\n        setPersons(persons.filter(n => n.id !== id));\n      })\n    setErrorMessage(`Removed ${name}`)\n    setMessageStatus('success')\n    setTimeout(() => {\n      setErrorMessage(null)\n      setMessageStatus(null)\n      }, 3000)\n    }\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    if (persons.some((person) => person.name.toLowerCase() === newName.toLowerCase())) {\n      if (window.confirm(newName + ' is already added to phonebook, replace the old number with a new one?')) {        \n        const personFound = persons.find((person) => person.name === newName)\n\n        personService\n          .update(personFound.id, { ...personFound, number: newNumber })\n          .then(response => {\n            setPersons(persons.map(person => (person.name === newName ? response : person)))\n          })\n          .catch(() => {\n            setErrorMessage(`Information of ${newName} has already been removed from server`)\n            setMessageStatus('error')\n              setTimeout(() => {\n                setErrorMessage(null)\n                setMessageStatus(null)\n              }, 3000)\n          })\n        setErrorMessage(`Changed ${newName}'s phone number`)\n        setMessageStatus('success')\n        setTimeout(() => {\n          setErrorMessage(null)\n          setMessageStatus(null)\n        }, 3000)        \n        setNewName('')\n        setNewNumber('')\n      }\n    } else {\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setErrorMessage(`Added ${newName}`)\n          setMessageStatus('success')\n          setNewName('')\n          setNewNumber('')  \n        })\n        .catch(error => {\n          setErrorMessage(error.response.data.error)\n          setMessageStatus('error')\n        })\n      setTimeout(() => {\n        setErrorMessage(null)\n        setMessageStatus(null)\n      }, 3000)\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} status={messageStatus} />\n      <SearchPerson\n        showPerson={showPerson}\n        handleFilterChange={handleFilterChange}\n      />\n      <h2>Add a new person</h2>\n      <NewPerson\n        addPerson={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n        handleNoteChange={handleNoteChange}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n        <RenderPerson personsFiltered={personsFiltered} handleRemovePerson={handleRemovePerson}\n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}